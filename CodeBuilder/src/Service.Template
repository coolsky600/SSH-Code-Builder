package cn.ibm.com.service;

import java.util.ArrayList;
import java.util.List;
import javax.annotation.Resource;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import cn.ibm.com.dao.##ClassNameDao;
import cn.ibm.com.po.##ClassName;
import cn.ibm.com.vo.##ClassNameVO;

@Component("##TableNameService")
public class ##ClassNameService {
	@Resource(name="##TableNameDao")
	private ##ClassNameDao ##TableNamedao;
	
	@Transactional
	public boolean insert##ClassName(##ClassName ##TableName){
		##TableNamedao.insert##ClassName(##TableName);
		return true;
	}
	
	@Transactional
	public boolean deleteById(long id){
		##TableNamedao.deleteById(id);
		return true;
	}
	
	@Transactional
	public boolean  update##ClassName(##ClassName ##TableName){
		##TableNamedao.Update(##TableName);
		return true;
	}
	
	@Transactional
	public List<##ClassName> findAll(){
		return ##TableNamedao.findAll();
	}
	
	@Transactional
	public List<##ClassName> findByName(String name){
		return ##TableNamedao.findByName(name);
	}
	
	@Transactional
	public ##ClassName findById(long id){
		return ##TableNamedao.findById(id);
	}
	
	@Transactional
	public List<##ClassName> findByPage(int start, int number){
		return ##TableNamedao.findByPage(start, number);
	}
	
	@Transactional
	public List<##ClassName> findByPage(String page, String rows){
		
		int intPage = Integer.parseInt((page == null || page == "0") ? "1":page);    
	    int number = Integer.parseInt((rows == null || rows == "0") ? "5":rows);  
	    int start = (intPage-1)*number;
	    
		return ##TableNamedao.findByPage(start, number);
	}
	
	@Transactional
	public int getTotalCount(){
		return ##TableNamedao.getTotalCount();
	}
}
